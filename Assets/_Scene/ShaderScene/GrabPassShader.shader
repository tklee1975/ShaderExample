// Reference: https://medium.com/@smokelore/shader-programming-volume-13-2696f717d4a8
Shader "ShaderTest/GrabPassShader"
{
	Properties
	{
		//_MainTex ("Texture", 2D) = "white" {}
	}
	SubShader
	{
		Tags {
		 "Queue" = "Transparent"
		 "RenderType"="Opaque" 
		}
		LOD 100

		GrabPass {}	// first pass is a grab pass

		Pass
		{
			CGPROGRAM
			#pragma vertex vert
			#pragma fragment frag

			#include "UnityCG.cginc"

			struct appdata
			{
				float4 vertex : POSITION;
			};

			struct v2f
			{
				float2 uv : TEXCOORD0;
				float4 uvgrab : TEXCOORD2;
				float4 vertex : SV_POSITION;
			};

			sampler2D _MainTex;
			float4 _MainTex_ST;
			sampler2D _GrabTexture;	// automatically generated by the GrabPass
			
			v2f vert (appdata v)
			{
				v2f o;

				o.vertex = UnityObjectToClipPos(v.vertex);
				o.uvgrab = ComputeGrabScreenPos(o.vertex);	// Grab the screen texture

				return o;
			}
			
			fixed4 frag (v2f i) : SV_Target
			{
				// sample the texture
				fixed4 col = tex2Dproj(_GrabTexture, UNITY_PROJ_COORD(i.uvgrab));

				//col *= half4(1, 0.5, 0.5, 1);	// add red tint
				col += half4(0.8, 0, 0, 0);	// add red tint

				return col;
			}
			ENDCG
		}
	}
}
